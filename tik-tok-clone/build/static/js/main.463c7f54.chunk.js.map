{"version":3,"sources":["components/Video.js","axios.js","App.js","reportWebVitals.js","index.js"],"names":["Video","props","videoUrl","userName","videoDescription","songName","initialLikeCount","initialCommentCount","initialShareCount","useState","isLiked","setLiked","likeCount","setLikeCount","shareCount","setShareCount","commentCount","setCommentCount","onClickLike","console","log","className","src","mode","index","fontSize","onClick","instance","axios","create","baseURL","App","videos","setVideos","useEffect","a","get","response","data","fetchVideos","map","video","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yXAqGeA,MA5Ff,SAAeC,GAGX,IAAIC,EAAWD,EAAMC,SACjBC,EAAWF,EAAME,SACjBC,EAAmBH,EAAMG,iBACzBC,EAAWJ,EAAMI,SACjBC,EAAmBL,EAAMK,iBACzBC,EAAsBN,EAAMM,oBAC5BC,EAAoBP,EAAMO,kBAE9B,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAASH,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,mBAASD,GAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAAwCN,mBAASF,GAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KAEA,SAASC,IAELC,QAAQC,IAAI,wBACTV,GAECC,GAAS,GACTE,EAAaD,EAAY,KAGzBD,GAAS,GACTE,EAAaD,EAAY,IAgBjC,OACI,sBAAKS,UAAY,kBAAjB,UACI,wBACAA,UAAY,QACZC,IAAKpB,IAIL,sBAAKmB,UAAY,eAAjB,UACI,oBAAIA,UAAY,yBAAhB,SAA0ClB,IAC1C,mBAAGkB,UAAY,2BAAf,SAA2CjB,IAC3C,sBAAKiB,UAAY,yBAAjB,UACI,cAAC,IAAD,CAAeA,UAAY,qBAC3B,cAAC,IAAD,CAAQE,KAAO,SAASF,UAAY,eAApC,SAEQ,cAAEG,MAAF,OACI,mCAEI,4BAAInB,eAU5B,sBAAKgB,UAAY,gBAAjB,UAKKX,EACG,cAAC,IAAD,CAAce,SAAW,QAAQC,QAAWR,IAE/C,cAAC,IAAD,CAAgBO,SAAW,QAAQC,QAAWR,IAE/C,4BAAIN,IAEJ,cAAC,IAAD,CAAaa,SAAW,QAAQC,QA9C5C,WAEIP,QAAQC,IAAI,yBACZH,EAAgBD,EAAe,MA4CvB,4BAAIA,IAEJ,cAAC,IAAD,CAAWS,SAAW,QAAQC,QAvD1C,WAEIP,QAAQC,IAAI,yBACZL,EAAcD,EAAa,MAqDnB,4BAAIA,W,QCzFLa,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,mDCoCEC,MAnCf,WAEE,MAA4BtB,mBAAS,IAArC,mBAAOuB,EAAP,KAAeC,EAAf,KAaA,OAZAC,qBAAU,WACV,4CACE,4BAAAC,EAAA,sEAEyBP,EAAMQ,IAAI,WAFnC,cAEQC,EAFR,OAGEJ,EAAUI,EAASC,MAHrB,kBAISD,GAJT,4CADF,uBAAC,WAAD,wBAOEE,KACC,IAID,qBAAKlB,UAAU,MAAf,SACE,qBAAKA,UAAY,SAAjB,SACGW,EAAOQ,KAAI,SAAAC,GAEV,OAAQ,cAAC,EAAD,CACNnC,iBAAoBmC,EAAM7B,UAC1BL,oBAAuBkC,EAAMzB,aAC7BR,kBAAqBiC,EAAM3B,WAC3BX,SAAYsC,EAAMtC,SAClBC,iBAAoBqC,EAAMrC,iBAC1BC,SAAYoC,EAAMpC,SAClBH,SAAYuC,EAAMvC,mBCnBfwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.463c7f54.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport \"../css/video.css\";\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport Ticker from \"react-ticker\";\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nfunction Video(props) \r\n{\r\n    \r\n    let videoUrl = props.videoUrl;\r\n    let userName = props.userName;\r\n    let videoDescription = props.videoDescription;\r\n    let songName = props.songName;\r\n    let initialLikeCount = props.initialLikeCount;\r\n    let initialCommentCount = props.initialCommentCount;\r\n    let initialShareCount = props.initialShareCount;\r\n\r\n    const [isLiked, setLiked] = useState(false);\r\n    const [likeCount, setLikeCount] = useState(initialLikeCount);\r\n    const [shareCount, setShareCount] = useState(initialShareCount);\r\n    const [commentCount, setCommentCount] = useState(initialCommentCount);\r\n\r\n    function onClickLike()\r\n    {\r\n        console.log(\"inside on click like\");\r\n        if(isLiked)\r\n        {\r\n            setLiked(false);\r\n            setLikeCount(likeCount - 1);\r\n        }    \r\n        else{\r\n            setLiked(true);\r\n            setLikeCount(likeCount + 1);\r\n        }\r\n    }\r\n\r\n    function onClickShare()\r\n    {\r\n        console.log(\"inside on click share\");\r\n        setShareCount(shareCount + 1);\r\n    }\r\n\r\n    function onClickComment()\r\n    {\r\n        console.log(\"inside on click share\");\r\n        setCommentCount(commentCount + 1);\r\n    }\r\n\r\n    return (\r\n        <div className = \"video-container\">\r\n            <iframe \r\n            className = \"video\"\r\n            src={videoUrl} \r\n            ></iframe>\r\n\r\n            {/* Video footer */}\r\n            <div className = \"video-footer\">\r\n                <h2 className = \"video-footer-user-name\">{userName}</h2>\r\n                <p className = \"video-footer-description\">{videoDescription}</p>\r\n                <div className = \"video-ticker-container\">\r\n                    <MusicNoteIcon className = \"video-music-icon\"/>\r\n                    <Ticker mode = \"smooth\" className = \"video-ticker\">\r\n                        {\r\n                            ({index}) => (\r\n                                <>\r\n                                 \r\n                                    <p>{songName}</p>\r\n                                </>\r\n                            )\r\n                        }\r\n                    </Ticker>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {/* Video Sidebar */}\r\n            <div className = \"video-sidebar\">\r\n\r\n                {/* if video is liked display filled fav icon*/}\r\n                {/* else */}\r\n                {/* display bordered unfilled fav icon*/}\r\n                {isLiked ? (\r\n                    <FavoriteIcon fontSize = \"large\" onClick = {onClickLike}/>\r\n                ) : \r\n                (<FavoriteBorder fontSize = \"large\" onClick = {onClickLike}/>)\r\n                }\r\n                <p>{likeCount}</p>\r\n               \r\n                <CommentIcon fontSize = \"large\" onClick = {onClickComment}/>\r\n                <p>{commentCount}</p>\r\n\r\n                <ShareIcon fontSize = \"large\" onClick = {onClickShare}/>\r\n                <p>{shareCount}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Video\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://tik-tok-clone-ankur9699.herokuapp.com/\",\r\n})\r\n\r\nexport default instance;","import './App.css';\nimport Video from './components/Video';\nimport {useEffect, useState} from \"react\";\nimport axios from \"./axios\";\nfunction App() \n{\n  const [videos, setVideos] = useState([]);\n  useEffect(() => \n  {\n    async function fetchVideos()\n    {\n      const response = await axios.get(\"/v1/get\");\n      setVideos(response.data);\n      return response;\n    }\n    fetchVideos();\n  }, [])\n\n  \n  return (\n    <div className=\"app\">\n      <div className = \"videos\">\n        {videos.map(video => \n        {\n          return (<Video\n            initialLikeCount = {video.likeCount} \n            initialCommentCount = {video.commentCount} \n            initialShareCount = {video.shareCount}\n            userName = {video.userName}\n            videoDescription = {video.videoDescription}\n            songName = {video.songName}\n            videoUrl = {video.videoUrl}\n          />)\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}